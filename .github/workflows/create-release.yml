name: 'Create release'

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version de la release (semver)'
        required: true
        default: 'x.x.x'
      snapshotVersion:
        description: 'Version de snapshot (semver)'
        required: true
        default: 'x.x.x-SNAPSHOT'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: '0' # to get all the tags locally
          # https://stackoverflow.com/questions/67550727/push-event-doesnt-trigger-workflow-on-push-paths-github-actions
          token: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}


      - name: 'Verify release is created only on "main" or "master" git branch'
        run: |
          CURRENT_GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo $CURRENT_GIT_BRANCH
          [[ "$CURRENT_GIT_BRANCH" == "main" || "$CURRENT_GIT_BRANCH" == "master" ]] && exit 0 || exit 1
      - name: 'Verify version is semver formatted (X.X.X)'
        env:
          NEW_TAG:  ${{ github.event.inputs.releaseVersion }}
          SNAPSHOT:  ${{ github.event.inputs.snapshotVersion }}
        run: |
          echo $NEW_TAG | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'
          echo $SNAPSHOT | grep -E '^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$'
      - name: 'Verify version is not already used as a git tag'
        env:
          NEW_TAG:  ${{ github.event.inputs.releaseVersion }}
        run: |
          [[ "$(git tag --list | grep $NEW_TAG)" == "" ]] && exit 0 || exit 1
      - name: 'Generate the new version (patch few files + git tag)'
        env:
          NEW_TAG: ${{ github.event.inputs.releaseVersion }}
          SNAPSHOT:  ${{ github.event.inputs.snapshotVersion }}
        run: |
          # préparation de la release qui va :
          # - modifier le numéro de version dans le package.json du projet (et éventuellement dans le README.md ou d'autres fichiers, cf le sed)
          # - créer un tag git du numéro de version en question
          # - pousser le tout sur le dépôt github et faire la fusion avec la branche develop
          git config --global user.email "github-action@noreply"
          git config --global user.name "Github Action"
          npm config set tag-version-prefix ''
          npm config set git-tag-version false
          npm version $NEW_TAG         
          sed -i "s#Version: [0-9]+\.[0-9]+\.[0-9]+#Version: $NEW_TAG#g" README.md
          git add .
          git commit -m "Version $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          git commit --amend -m "Version $NEW_TAG [skip ci]"
          git push
          # merge la préparation de la nouvelle version sur develop
          # (version X.X.X-SNAPSHOT)
          git switch develop
          git merge main -m "Merge main to develop [skip ci]"
          npm version $SNAPSHOT         
          sed -i "s#Version: [0-9]+\.[0-9]+\.[0-9]+#Version: $SNAPSHOT#g" README.md
          git add .
          git commit -m "Version $SNAPSHOT [skip ci]"
          git push
      - name: 'Create the github release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          generate_release_notes: true
          token: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}
